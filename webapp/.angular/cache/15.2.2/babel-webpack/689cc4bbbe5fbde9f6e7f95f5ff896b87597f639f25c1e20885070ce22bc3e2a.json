{"ast":null,"code":"import { ModelParameter } from \"../model/conceptual-model-parameter\";\nimport { Objective } from \"../dto/objective.dto\";\nimport { ObjectiveData } from \"./objective-data.dto\";\nvar ModulariseConceptualModelDTO = /** @class */function () {\n  function ModulariseConceptualModelDTO(geneticAlgorithmSelectionParameter, geneticAlgorithmParameter, paretoSetParameter, mutationWeightParamter, conceptualModelParameter, conceptualModelFile) {\n    this._chromosomeEncoding = geneticAlgorithmSelectionParameter.chromosomeEncoding;\n    this._offspringSelection = geneticAlgorithmSelectionParameter.offspringSelection;\n    this._survivorSelection = geneticAlgorithmSelectionParameter.survivorSelection;\n    this._crossoverType = geneticAlgorithmSelectionParameter.crossoverType;\n    this._mutationType = geneticAlgorithmSelectionParameter.mutationType;\n    this._countGeneration = geneticAlgorithmParameter.numberOfGenerations;\n    this._countPopulation = geneticAlgorithmParameter.countPopulation;\n    this._mutationProbability = geneticAlgorithmParameter.mutationProbability;\n    this._crossoverProbability = geneticAlgorithmParameter.crossoverProbability;\n    this._convergenceRate = geneticAlgorithmParameter.convergenceRate;\n    this._convergedGeneRate = geneticAlgorithmParameter.convergedGeneRate;\n    this._tournamentSize = geneticAlgorithmParameter.tournamentSize;\n    this._minimumParetoSetSize = paretoSetParameter.minimumParetoSetSize;\n    this._maximumParetoSetSize = paretoSetParameter.maximumParetoSetSize;\n    this._mutationWeight = mutationWeightParamter;\n    this._metaModelType = ModelParameter.MetaModelType[conceptualModelParameter.metaModelType];\n    this._conceptualModelType = ModelParameter.ConceptualModelType[conceptualModelParameter.conceptualModelType];\n    this._edgeWeights = conceptualModelParameter.edgeWeights;\n    this._isUseWeightedSumMethod = conceptualModelParameter.objectiveData.isUseWeightedSumMethod;\n    this._objectives = conceptualModelParameter.objectiveData.objectives.map(function (objectiveModel) {\n      var objectiveDTO = new Objective();\n      objectiveDTO.objectiveType = objectiveModel.objectiveType;\n      objectiveDTO.selected = objectiveModel.isSelected;\n      objectiveDTO.weight = objectiveModel.objectiveWeight;\n      return objectiveDTO;\n    });\n    this._objectiveData = new ObjectiveData();\n    this._objectiveData.numberOfElementsPerModule = conceptualModelParameter.objectiveData.numberOfElementsPerModule;\n    this._objectiveData.isUseWeightedSumMethod = conceptualModelParameter.objectiveData.isUseWeightedSumMethod;\n    this._objectiveData.objectiveSpecifications = conceptualModelParameter.objectiveData.objectives.map(function (objectiveModel) {\n      var objectiveDTO = new Objective();\n      objectiveDTO.objectiveType = objectiveModel.objectiveType;\n      objectiveDTO.selected = objectiveModel.isSelected;\n      objectiveDTO.weight = objectiveModel.objectiveWeight;\n      return objectiveDTO;\n    });\n    this._conceptualModelFile = conceptualModelFile;\n  }\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"chromosomeEncoding\", {\n    get: function () {\n      return this._chromosomeEncoding;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"offspringSelection\", {\n    get: function () {\n      return this._offspringSelection;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"survivorSelection\", {\n    get: function () {\n      return this._survivorSelection;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"crossoverType\", {\n    get: function () {\n      return this._crossoverType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"mutationType\", {\n    get: function () {\n      return this._mutationType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"countGeneration\", {\n    get: function () {\n      return this._countGeneration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"countPopulation\", {\n    get: function () {\n      return this._countPopulation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"mutationProbability\", {\n    get: function () {\n      return this._mutationProbability;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"crossoverProbability\", {\n    get: function () {\n      return this._crossoverProbability;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"tournamentSize\", {\n    get: function () {\n      return this._tournamentSize;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"convergenceRate\", {\n    get: function () {\n      return this._convergenceRate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"convergedGeneRate\", {\n    get: function () {\n      return this._convergedGeneRate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"minimumParetoSetSize\", {\n    get: function () {\n      return this._minimumParetoSetSize;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"maximumParetoSetSize\", {\n    get: function () {\n      return this._maximumParetoSetSize;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"mutationWeight\", {\n    get: function () {\n      return this._mutationWeight;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"conceptualModelType\", {\n    get: function () {\n      return this._conceptualModelType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"metaModelType\", {\n    get: function () {\n      return this._metaModelType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"conceptualModelFile\", {\n    get: function () {\n      return this._conceptualModelFile;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"dtdFile\", {\n    get: function () {\n      return this._dtdFile;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"edgeWeights\", {\n    get: function () {\n      return this._edgeWeights;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"isUseWeightedSumMethod\", {\n    get: function () {\n      return this._isUseWeightedSumMethod;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"objectiveData\", {\n    get: function () {\n      return this._objectiveData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ModulariseConceptualModelDTO.prototype, \"objectives\", {\n    get: function () {\n      return this._objectives;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ModulariseConceptualModelDTO;\n}();\nexport { ModulariseConceptualModelDTO };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}